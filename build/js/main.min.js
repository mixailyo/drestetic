/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_tabs_init_tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/tabs/init-tabs */ "./js/modules/tabs/init-tabs.js");
/* harmony import */ var _modules_accordions_init_accordion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/accordions/init-accordion */ "./js/modules/accordions/init-accordion.js");
/* harmony import */ var _modules_preheader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/preheader */ "./js/modules/preheader.js");
/* harmony import */ var _modules_header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/header */ "./js/modules/header.js");
/* harmony import */ var _modules_banner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/banner */ "./js/modules/banner.js");
/* harmony import */ var _modules_equipment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/equipment */ "./js/modules/equipment.js");
/* harmony import */ var _modules_use__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/use */ "./js/modules/use.js");
/* harmony import */ var _modules_more_btn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/more-btn */ "./js/modules/more-btn.js");
/* harmony import */ var _modules_materials__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/materials */ "./js/modules/materials.js");
/* harmony import */ var _modules_card__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/card */ "./js/modules/card.js");
/* harmony import */ var _modules_methods__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/methods */ "./js/modules/methods.js");
/* harmony import */ var _modules_lazy_load_youtube__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/lazy-load-youtube */ "./js/modules/lazy-load-youtube.js");













 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])();
  Object(_modules_preheader__WEBPACK_IMPORTED_MODULE_4__["preheader"])();
  Object(_modules_header__WEBPACK_IMPORTED_MODULE_5__["header"])();
  Object(_modules_banner__WEBPACK_IMPORTED_MODULE_6__["banner"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_tabs_init_tabs__WEBPACK_IMPORTED_MODULE_2__["initTabs"])();
    Object(_modules_accordions_init_accordion__WEBPACK_IMPORTED_MODULE_3__["initAccordions"])();
    Object(_modules_equipment__WEBPACK_IMPORTED_MODULE_7__["equipment"])();
    Object(_modules_use__WEBPACK_IMPORTED_MODULE_8__["use"])();
    Object(_modules_more_btn__WEBPACK_IMPORTED_MODULE_9__["moreBtn"])();
    Object(_modules_materials__WEBPACK_IMPORTED_MODULE_10__["materials"])();
    Object(_modules_card__WEBPACK_IMPORTED_MODULE_11__["card"])();
    Object(_modules_methods__WEBPACK_IMPORTED_MODULE_12__["methods"])();
    Object(_modules_lazy_load_youtube__WEBPACK_IMPORTED_MODULE_13__["lazyLoadYouTube"])();
  });
});

/***/ }),

/***/ "./js/modules/accordions/accordions.js":
/*!*********************************************!*\
  !*** ./js/modules/accordions/accordions.js ***!
  \*********************************************/
/*! exports provided: Accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accordions", function() { return Accordions; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);

    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);

    this._init();
  }

  _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-accordion="button"]')) {
        return;
      }

      evt.preventDefault();
      var parent = target.closest('[data-accordion="parent"]');

      if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
        return;
      }

      var element = target.closest('[data-accordion="element"]');

      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }

      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }

      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;

      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');

        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }

      var closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
      closeElements.forEach(function (closeElement) {
        var parent = closeElement.closest('[data-accordion="parent"]');
        var content = closeElement.querySelector('[data-accordion="content"]');

        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }

        content.style.maxHeight = null;
      });
      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        var parent = openElement.closest('[data-accordion="parent"]');

        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }

        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;

      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;

      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }

      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');

        if (innerParent) {
          return;
        }

        _this2.openAccordion(openElement, transition);
      });
      this.updateAccordionsHeight();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;

      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }

      element.classList.add('is-active');

      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }

      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }

      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');

      if (!contentElement) {
        return;
      }

      element.classList.remove('is-active');

      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);

  return Accordions;
}();

/***/ }),

/***/ "./js/modules/accordions/init-accordion.js":
/*!*************************************************!*\
  !*** ./js/modules/accordions/init-accordion.js ***!
  \*************************************************/
/*! exports provided: initAccordions, accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAccordions", function() { return initAccordions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordions", function() { return accordions; });
/* harmony import */ var _accordions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordions */ "./js/modules/accordions/accordions.js");

var accordions;

var initAccordions = function initAccordions() {
  accordions = new _accordions__WEBPACK_IMPORTED_MODULE_0__["Accordions"](); // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда

  window.accordions = accordions;
};



/***/ }),

/***/ "./js/modules/banner.js":
/*!******************************!*\
  !*** ./js/modules/banner.js ***!
  \******************************/
/*! exports provided: banner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "banner", function() { return banner; });
function banner() {
  var swiper = new Swiper('.banner', {
    loop: true,
    spaceBetween: 30,
    pagination: {
      el: '.swiper-pagination'
    }
  });
}



/***/ }),

/***/ "./js/modules/card.js":
/*!****************************!*\
  !*** ./js/modules/card.js ***!
  \****************************/
/*! exports provided: card */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "card", function() { return card; });
function card() {
  var cardPreviewSlider = document.querySelector('.card__preview-slider');
  var cardMainSlider = document.querySelector('.card__main-slider');

  if (cardPreviewSlider) {
    var swiper1 = new Swiper(cardPreviewSlider, {
      direction: document.documentElement.clientWidth > 767 ? 'vertical' : 'horizontal',
      slidesPerView: 3,
      spaceBetween: 20,
      navigation: {
        nextEl: cardPreviewSlider.querySelector('.card__preview-slider-navigation-button--next'),
        prevEl: cardPreviewSlider.querySelector('.card__preview-slider-navigation-button--prev')
      }
    });
    var swiper2 = new Swiper(cardMainSlider, {
      spaceBetween: 20,
      thumbs: {
        swiper: swiper1
      }
    });
  }
}



/***/ }),

/***/ "./js/modules/equipment.js":
/*!*********************************!*\
  !*** ./js/modules/equipment.js ***!
  \*********************************/
/*! exports provided: equipment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equipment", function() { return equipment; });
function equipment() {
  var equipmentSlider = document.querySelector('.equipment .section__slider');

  if (equipmentSlider) {
    var swiper = new Swiper(equipmentSlider, {
      loop: true,
      slidesPerView: 5,
      spaceBetween: 26,
      navigation: {
        nextEl: equipmentSlider.querySelector('.swiper-navigation__btn--next'),
        prevEl: equipmentSlider.querySelector('.swiper-navigation__btn--prev')
      },
      breakpoints: {
        // when window width is >= 320px
        320: {
          slidesPerView: 2,
          spaceBetween: 18
        },
        // when window width is >= 480px
        768: {
          slidesPerView: 3,
          spaceBetween: 22
        },
        // when window width is >= 640px
        1024: {
          slidesPerView: 4,
          spaceBetween: 26
        },
        // when window width is >= 640px
        1278: {
          slidesPerView: 5,
          spaceBetween: 26
        }
      }
    });
  }
}



/***/ }),

/***/ "./js/modules/header.js":
/*!******************************!*\
  !*** ./js/modules/header.js ***!
  \******************************/
/*! exports provided: header */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "header", function() { return header; });
function header() {
  var headerMenu = document.querySelector('.header__menu');
  var headerBurger = document.querySelector('.header__burger');
  var headerMenuClose = document.querySelector('.header__menu-close');

  if (headerMenu) {
    headerBurger.addEventListener('click', function () {
      headerMenu.classList.add('header__menu--is-opened');
    });
    headerMenuClose.addEventListener('click', function () {
      headerMenu.classList.remove('header__menu--is-opened');
    });
  }
}



/***/ }),

/***/ "./js/modules/lazy-load-youtube.js":
/*!*****************************************!*\
  !*** ./js/modules/lazy-load-youtube.js ***!
  \*****************************************/
/*! exports provided: lazyLoadYouTube */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lazyLoadYouTube", function() { return lazyLoadYouTube; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function lazyLoadYouTube() {
  // Get all of the videos
  var videos = document.querySelectorAll('[data-youtube]'); // Progressively enhance them

  var _iterator = _createForOfIteratorHelper(videos),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var video = _step.value;
      // Get the video ID
      var id = new URL(video.href).searchParams.get('v'); // Add the ID to the data-youtube attribute

      video.setAttribute('data-youtube', id); // Add a role of button

      video.setAttribute('role', 'button'); // Add a thumbnail

      video.innerHTML = "<img alt=\"\" src=\"https://img.youtube.com/vi/".concat(id, "/maxresdefault.jpg\"><br>\n      ").concat(video.textContent);
    }
    /**
     * Handle click events on the video thumbnails
     * @param  {Event} event The event object
     */

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  function clickHandler(event) {
    // Get the video link
    var link = event.target.closest('[data-youtube]');
    if (!link) return; // Prevent the URL from redirecting users

    event.preventDefault(); // Get the video ID

    var id = link.getAttribute('data-youtube'); // Create the player

    var player = document.createElement('div');
    player.setAttribute('data-youtube', '');
    player.innerHTML = "<iframe src=\"https://www.youtube-nocookie.com/embed/".concat(id, "?autoplay=1\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"); // Inject the player into the UI

    link.replaceWith(player);
  } // Detect clicks on the video thumbnails


  document.addEventListener('click', clickHandler);
}



/***/ }),

/***/ "./js/modules/materials.js":
/*!*********************************!*\
  !*** ./js/modules/materials.js ***!
  \*********************************/
/*! exports provided: materials */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "materials", function() { return materials; });
function materials() {
  var materialsSlider = document.querySelector('.materials .section__slider');

  if (materialsSlider && document.documentElement.clientWidth > 767) {
    var swiper = new Swiper(materialsSlider, {
      loop: true,
      slidesPerView: 4,
      spaceBetween: 37,
      navigation: {
        nextEl: materialsSlider.querySelector('.swiper-navigation__btn--next'),
        prevEl: materialsSlider.querySelector('.swiper-navigation__btn--prev')
      },
      breakpoints: {
        // when window width is >= 320px
        320: {
          slidesPerView: 2,
          spaceBetween: 18
        },
        // when window width is >= 480px
        768: {
          slidesPerView: 3,
          spaceBetween: 22
        },
        // when window width is >= 640px
        1024: {
          slidesPerView: 4,
          spaceBetween: 26
        },
        // when window width is >= 640px
        1278: {
          slidesPerView: 4,
          spaceBetween: 37
        }
      }
    });
  }
}



/***/ }),

/***/ "./js/modules/methods.js":
/*!*******************************!*\
  !*** ./js/modules/methods.js ***!
  \*******************************/
/*! exports provided: methods */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "methods", function() { return methods; });
function methods() {
  var methodsSlider = document.querySelector('.methods__slider');

  if (methodsSlider) {
    var swiper = new Swiper(methodsSlider, {
      loop: true,
      slidesPerView: 4,
      spaceBetween: 110,
      navigation: {
        nextEl: methodsSlider.querySelector('.swiper-navigation__btn--next'),
        prevEl: methodsSlider.querySelector('.swiper-navigation__btn--prev')
      },
      breakpoints: {
        // when window width is >= 320px
        320: {
          slidesPerView: 3,
          spaceBetween: 20
        },
        // when window width is >= 640px
        1024: {
          slidesPerView: 4,
          spaceBetween: 110
        }
      }
    });
  }
}



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals; // Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };
// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');

  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }

  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);

    this._init();
  }

  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;

      if (!this._settings[settingKey]) {
        return;
      }

      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this._modalName) {
        return;
      }

      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');

      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }

      this._setSettings(modalName);

      modal.classList.add('is-active');

      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }

      if (this._openCallback) {
        this._openCallback();
      }

      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }

      setTimeout(function () {
        _this._addListeners(modal);

        _this._autoPlay(modal);

        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }

      modal.classList.remove('is-active');

      this._removeListeners(modal);

      this._stopInteractive(modal);

      if (this._closeCallback) {
        this._closeCallback();
      }

      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);

      this._setSettings('default');

      this._enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/modules/more-btn.js":
/*!********************************!*\
  !*** ./js/modules/more-btn.js ***!
  \********************************/
/*! exports provided: moreBtn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreBtn", function() { return moreBtn; });
function moreBtn() {
  var moreBtns = document.querySelectorAll('.more-btn');

  if (moreBtns.length) {
    moreBtns.forEach(function (btn) {
      btn.addEventListener('click', function () {
        btn.closest('section').classList.add('is-more');
      });
    });
  }
}



/***/ }),

/***/ "./js/modules/preheader.js":
/*!*********************************!*\
  !*** ./js/modules/preheader.js ***!
  \*********************************/
/*! exports provided: preheader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "preheader", function() { return preheader; });
function preheader() {
  var preheader = document.querySelector('.preheader');

  if (preheader) {
    var preheaderClose = preheader.querySelector('.preheader__close');
    preheaderClose === null || preheaderClose === void 0 ? void 0 : preheaderClose.addEventListener('click', function () {
      preheader.classList.add('preheader--closed');
    });
  }
}



/***/ }),

/***/ "./js/modules/tabs/init-tabs.js":
/*!**************************************!*\
  !*** ./js/modules/tabs/init-tabs.js ***!
  \**************************************/
/*! exports provided: initTabs, tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabs", function() { return initTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabs", function() { return tabs; });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs/tabs.js");

var tabs;

var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__["Tabs"](); // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда

  window.tabs = tabs;
};



/***/ }),

/***/ "./js/modules/tabs/tabs.js":
/*!*********************************!*\
  !*** ./js/modules/tabs/tabs.js ***!
  \*********************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tabs", function() { return Tabs; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);

    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);

    this._init();
  }

  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();

      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;

      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;

            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-tabs="control"]')) {
        return;
      }

      evt.preventDefault();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;

      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);

      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;

      this._removeAllActiveClasses(tabControlElements, tabElements);

      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');

      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }

      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');

        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');

        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;

      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');

        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }

        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;

      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);

      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);

      if (!transition) {
        parentElement.classList.add('no-transition');
      }

      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }

      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this4 = this;

      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');

      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);

      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);

      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);

      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this4._resizeObserver().observe(element);
        });
      }

      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');

      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }

      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');

      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);

      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);

      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);

      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();

      if (activeControl) {
        activeControl.classList.remove('is-active');
      }

      if (activeElement) {
        activeElement.classList.remove('is-active');
      }

      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }

          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }

        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);

  return Tabs;
}();

/***/ }),

/***/ "./js/modules/use.js":
/*!***************************!*\
  !*** ./js/modules/use.js ***!
  \***************************/
/*! exports provided: use */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "use", function() { return use; });
function use() {
  var useSlider = document.querySelector('.use .section__slider');

  if (useSlider && document.documentElement.clientWidth > 767) {
    var swiper = new Swiper(useSlider, {
      loop: true,
      slidesPerView: 5,
      spaceBetween: 46,
      navigation: {
        nextEl: useSlider.querySelector('.swiper-navigation__btn--next'),
        prevEl: useSlider.querySelector('.swiper-navigation__btn--prev')
      },
      breakpoints: {
        // when window width is >= 320px
        320: {
          slidesPerView: 2,
          spaceBetween: 18
        },
        // when window width is >= 480px
        768: {
          slidesPerView: 3,
          spaceBetween: 22
        },
        // when window width is >= 640px
        1024: {
          slidesPerView: 4,
          spaceBetween: 26
        },
        // when window width is >= 640px
        1278: {
          slidesPerView: 5,
          spaceBetween: 46
        }
      }
    });
  }
}



/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);

      if (!lockedElement) {
        return;
      }

      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");

        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map